#!/bin/sh

{% set rule_comment = ["CustomCloud: vm ", inventory_hostname, " routing"]|join %}

iptables-save -t nat | grep 'comment "{{ rule_comment }}"' | sed -e 's/^-A /iptables -t nat -D /g' | sh
iptables-save -t filter | grep 'comment "{{ rule_comment }}"' | sed -e 's/^-A /iptables -t filter -D /g' | sh

{% for port, config in exposed_ports.items() %}
{% set host_port = (port_redirect_prefix|int + port|int) if config.prefix else port %}
{% if (not config.prefix) or (host_port >= port_redirect_prefix and host_port < (port_redirect_prefix|int + allowed_range_port|int)) %}
{% set nat_rule = ["PREROUTING -t nat -i ", host_external_interface, " -p ", config.prot, " --dport ", host_port, " -j DNAT --to ", vm_ip, ":", port, " -m comment --comment '", rule_comment, "'"]|join %}
{% set firewall_base_rule = ["-t filter -p ", config.prot, " --dport ", host_port, " -j ACCEPT -m comment --comment '", rule_comment, "'"]|join %}
{% set firewall_input_rule = ["INPUT -i ", host_external_interface, " ", firewall_base_rule]|join %}
{% set firewall_output_rule = ["OUTPUT ", firewall_base_rule]|join %}
iptables -C {{ nat_rule }} || iptables -A {{ nat_rule }}
iptables -C {{ firewall_input_rule }} || iptables -A {{ firewall_input_rule }}
iptables -C {{ firewall_output_rule }} || iptables -A {{ firewall_output_rule }}
{% else %}

#redirection from {{ host_port }} to {{ port }} not allowed. {{ host_port }} is not in allowed port range.
{% endif %}
{% endfor %}